############################################################################
#   COMPOSER BUILD CONTAINER
############################################################################
#start with our base image (the foundation) - version 7.1.5
FROM php:7.0.19 as composer-build

#install all the system dependencies and enable PHP modules
RUN apt-get update && apt-get install -y \
      libicu-dev \
      libpq-dev \
      libmcrypt-dev \
      git \
      zip \
      unzip \
      wget \
      vim \
      telnet \
    && rm -r /var/lib/apt/lists/* \
    && docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd \
    && docker-php-ext-install \
      intl \
      mbstring \
      mcrypt \
      pcntl \
      pdo_mysql \
      pdo_pgsql \
      pgsql \
      zip \
      opcache


# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer

# Change Working DIrectory
WORKDIR /app

# Copy source files
COPY . /app

# Composer Install
ENV COMPOSER_ALLOW_SUPERUSER 1
RUN composer install --no-interaction


############################################################################
#   NODE JS BUILD CONTAINER
############################################################################

FROM node:7 as node-build
WORKDIR /app
COPY . .

RUN npm install -g bower gulp && \
    npm install && \
    bower install --allow-root && \
    gulp && \
    rm -rf node_modules bower_components


############################################################################
#   PRODUCTION CONTAINER
############################################################################
FROM php:7.0.19-apache

#install all the system dependencies and enable PHP modules
RUN apt-get update && apt-get install -y \
      libicu-dev \
      libpq-dev \
      libmcrypt-dev \
      git \
      zip \
      unzip \
      wget \
      vim \
      telnet \
    && rm -r /var/lib/apt/lists/* \
    && docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd \
    && docker-php-ext-install \
      intl \
      mbstring \
      mcrypt \
      pcntl \
      pdo_mysql \
      pdo_pgsql \
      pgsql \
      zip \
      opcache

#set our application folder as an environment variable
ENV APP_HOME /var/www/html

#change uid and gid of apache to docker user uid/gid
RUN usermod -u 1000 www-data && groupmod -g 1000 www-data

# enable apache module rewrite
RUN a2enmod rewrite
RUN a2ensite 000-default

#change the web_root to laravel /var/www/html/public folder
RUN sed -i -e "s/html/html\/public/g" /etc/apache2/sites-enabled/000-default.conf
RUN sed -i -e "s/#ServerName www.example.com/ServerName localhost/g" /etc/apache2/sites-enabled/000-default.conf
RUN sed -i -e "s/\${APACHE_LOG_DIR}/\/var\/log\/apache2/g" /etc/apache2/sites-enabled/000-default.conf

# add some php configurations
COPY config/php-configs/php.ini /usr/local/etc/php

#copy source files
COPY --from=node-build /app $APP_HOME
COPY --from=composer-build /app/vendor $APP_HOME/vendor

#change ownership of our applications
RUN chown -R www-data:www-data $APP_HOME

# Rig it up to use only bash
RUN mv /bin/sh /bin/sh2 ; ln -s /bin/bash /bin/sh

CMD source /etc/apache2/envvars && /usr/sbin/apache2 -D FOREGROUND